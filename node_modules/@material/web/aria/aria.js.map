{"version":3,"file":"aria.js","sourceRoot":"","sources":["aria.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAOH;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAmB;IAC7C,YAAY,EAAW,kBAAkB,EAAE,UAAU;IACrD,aAAa,EAAU,cAAc,EAAM,cAAc;IACzD,kBAAkB,EAAK,aAAa,EAAO,aAAa;IACxD,cAAc,EAAS,cAAc,EAAM,cAAc;IACzD,YAAY,EAAW,aAAa,EAAO,kBAAkB;IAC7D,WAAW,EAAY,WAAW,EAAS,UAAU;IACrD,WAAW,EAAY,eAAe,EAAK,qBAAqB;IAChE,iBAAiB,EAAM,iBAAiB,EAAG,cAAc;IACzD,aAAa,EAAU,cAAc,EAAM,cAAc;IACzD,qBAAqB,EAAE,cAAc,EAAM,cAAc;IACzD,kBAAkB,EAAK,aAAa,EAAO,cAAc;IACzD,aAAa,EAAU,UAAU,EAAU,cAAc;IACzD,cAAc,EAAS,cAAc,EAAM,eAAe;CAC3D,CAAC;AAOF;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAE5E;;;;;;;;GAQG;AACH,MAAM,UAAU,eAAe,CAAC,SAAiB;IAC/C,OAAO,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAED;;;;;;;;GAQG;AACH,MAAM,UAAU,uBAAuB,CACnC,QAAW;IACb,OAAO,QAAQ;SACH,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;QACzB,kEAAkE;SACjE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;SACzB,WAAW,EAAgC,CAAC;AAC1D,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Accessibility Object Model reflective aria property name types.\n */\nexport type ARIAProperty = Exclude<keyof ARIAMixin, 'role'>;\n\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES: ARIAProperty[] = [\n  'ariaAtomic',          'ariaAutoComplete', 'ariaBusy',\n  'ariaChecked',         'ariaColCount',     'ariaColIndex',\n  'ariaColIndexText',    'ariaColSpan',      'ariaCurrent',\n  'ariaDisabled',        'ariaExpanded',     'ariaHasPopup',\n  'ariaHidden',          'ariaInvalid',      'ariaKeyShortcuts',\n  'ariaLabel',           'ariaLevel',        'ariaLive',\n  'ariaModal',           'ariaMultiLine',    'ariaMultiSelectable',\n  'ariaOrientation',     'ariaPlaceholder',  'ariaPosInSet',\n  'ariaPressed',         'ariaReadOnly',     'ariaRequired',\n  'ariaRoleDescription', 'ariaRowCount',     'ariaRowIndex',\n  'ariaRowIndexText',    'ariaRowSpan',      'ariaSelected',\n  'ariaSetSize',         'ariaSort',         'ariaValueMax',\n  'ariaValueMin',        'ariaValueNow',     'ariaValueText',\n];\n\n/**\n * Accessibility Object Model aria attribute name types.\n */\nexport type ARIAAttribute = ARIAPropertyToAttribute<ARIAProperty>;\n\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute: string): attribute is ARIAAttribute {\n  return attribute.startsWith('aria-');\n}\n\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute<K extends ARIAProperty|'role'>(\n    property: K) {\n  return property\n             .replace('aria', 'aria-')\n             // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n             .replace(/Elements?/g, '')\n             .toLowerCase() as ARIAPropertyToAttribute<K>;\n}\n\n// Converts an `ariaFoo` string type to an `aria-foo` string type.\ntype ARIAPropertyToAttribute<K extends string> =\n    K extends `aria${infer Suffix}Element${infer OptS}` ?\n    `aria-${Lowercase < Suffix >}` :\n    K extends `aria${infer Suffix}` ? `aria-${Lowercase < Suffix >}` : K;\n"]}